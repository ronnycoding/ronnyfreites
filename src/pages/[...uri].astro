---
import BaseLayout from '@/layouts/BaseLayout.astro';
import { getNodeByUri } from '@/lib/api';
import { isGraphType, isWPBlock } from '@/utils/types'
import WPBlock from '@/components/WPBlock.astro';
import Pagination from '@/components/Pagination.astro';
import PostPreview from '@/components/PostPreview.astro';

const POSTS_PER_PAGE = 5;

const after = Astro.url.searchParams.get('after') || null;
const before = Astro.url.searchParams.get('before') || null;

const nodeByUri = await getNodeByUri({
  uri: Astro.url.pathname,
  categoryName: Astro.url.pathname,
  first: before ? null : POSTS_PER_PAGE,
  last: before ? POSTS_PER_PAGE : null,
  after,
  before,
});

const nodeData = nodeByUri?.nodeByUri;
const dataTypes = ['Page', 'Post', 'Category', 'Tag'];
const [pageData, postData, categoryData, tagData] = dataTypes.map(type =>
  nodeData && isGraphType(nodeData, type) ? nodeData : null
);

const title = postData?.title ?? pageData?.title ?? categoryData?.name ?? tagData?.name ?? '';

const posts = [
  nodeByUri?.posts?.edges,
  categoryData?.posts?.edges,
  tagData?.posts?.edges,
].find(arr => Array.isArray(arr) && arr.length > 0) || [];

const blocks = (pageData?.editorBlocks ?? postData?.editorBlocks ?? []).filter(isWPBlock);

// Validation: Check if there's no content and return 404 if true
if (!title && posts.length === 0 && blocks.length === 0) {
  return Astro.redirect('/404', 404);
}

const seo = nodeByUri?.nodeByUri?.seo;

// Pagination logic
const isNonEmptyObject = (obj: any): boolean => {
  return obj != null && typeof obj === 'object' && Object.keys(obj).length > 0;
};

// Improved pageInfo selection logic
const pageInfo = [
  nodeByUri?.posts?.pageInfo,
  categoryData?.posts?.pageInfo,
  tagData?.posts?.pageInfo
].find(isNonEmptyObject) || {};

const { hasNextPage, hasPreviousPage, startCursor, endCursor } = pageInfo ?? {};

Astro.response.headers.set("Cache-Control", "max-age=600, must-revalidate");
---

<BaseLayout
  title={nodeByUri?.generalSettings?.title ?? ''}
  description={nodeByUri?.generalSettings?.description ?? ''}
  image={pageData?.featuredImage?.node && {
    alt: pageData?.featuredImage?.node?.altText ?? '',
    src: pageData?.featuredImage?.node?.sourceUrl ?? '',
  }}
  showHeader={false}
  primaryMenu={nodeByUri?.primaryMenu?.nodes?.[0] && isGraphType(nodeByUri?.primaryMenu?.nodes?.[0], 'Menu') ? nodeByUri?.primaryMenu?.nodes?.[0] : null}
  footerMenu={nodeByUri?.footerMenu?.nodes?.[0] && isGraphType(nodeByUri?.footerMenu?.nodes?.[0], 'Menu') ? nodeByUri?.footerMenu?.nodes?.[0] : null}
  seo={seo}
>
    {title && (
        <header class="mb-4">
            <h1 class="text-3xl leading-tight font-serif font-medium sm:text-5xl sm:leading-tight">{title}</h1>
        </header>
    )}
    <WPBlock blocks={blocks} />
    {postData?.tags?.edges && postData?.tags.edges.length > 0 && (
      <div class="mt-2">
        {postData?.tags.edges.map((tag) => (
          <a
            key={tag.node.id}
            class="inline-block px-2 py-1 mr-2 mb-2 text-xs font-medium text-white bg-gray-800 rounded-sm"
            href={tag.node.uri}
          >
            {tag.node.name}
          </a>
        ))}
      </div>
    )}
    {posts?.length > 0 && (
      <div class="mt-14">
        {posts?.map(edge => (
          <PostPreview post={edge.node} class="mb-10 sm:mb-12" />
        ))}
        <Pagination
          hasNextPage={hasNextPage}
          hasPreviousPage={hasPreviousPage}
          startCursor={startCursor}
          endCursor={endCursor}
          currentAfter={after}
          currentBefore={before}
        />
      </div>
    )}
    {posts?.length === 0 && (before || after) && (
      <p>No posts found on this page. <a href={`${Astro.url.pathname}`}>Return to first page</a></p>
    )}
</BaseLayout>
