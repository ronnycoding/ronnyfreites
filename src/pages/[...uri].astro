---
import BaseLayout from '@/layouts/BaseLayout.astro';
import { getNodeByUri } from '@/lib/api';
import { isGraphType, isWPBlock } from '@/utils/types'
import WPBlock from '@/components/WPBlock.astro';
// import Pagination from '@/components/Pagination.astro';
import PostPreview from '@/components/PostPreview.astro';

const nodeByUri = await getNodeByUri(Astro.url.pathname);

const nodeData = nodeByUri?.nodeByUri;
const dataTypes = ['Page', 'Post', 'Category', 'Tag'];
const [pageData, postData, categoryData, tagData] = dataTypes.map(type =>
  nodeData && isGraphType(nodeData, type) ? nodeData : null
);

const title = postData?.title ?? pageData?.title ?? categoryData?.name ?? tagData?.name ?? '';

const posts = nodeByUri?.posts?.edges?.length > 0 ? nodeByUri.posts.edges :
              categoryData?.posts?.edges?.length > 0 ? categoryData.posts.edges :
              tagData?.posts?.edges?.length > 0 ? tagData.posts.edges :
              [];

const blocks = (pageData?.editorBlocks?.length > 0 ? pageData.editorBlocks :
                postData?.editorBlocks?.length > 0 ? postData.editorBlocks :
                [])
               .filter(isWPBlock);

// Validation: Check if there's no content and return 404 if true
if (!title && posts.length === 0 && blocks.length === 0) {
  return Astro.redirect('/404', 404);
}

const seo = nodeByUri?.nodeByUri?.seo
Astro.response.headers.set("Cache-Control", "max-age=600, must-revalidate");
---

<BaseLayout
  title={nodeByUri?.generalSettings?.title ?? ''}
  description={nodeByUri?.generalSettings?.description ?? ''}
  image={pageData?.featuredImage?.node && {
    alt: pageData?.featuredImage?.node?.altText ?? '',
    src: pageData?.featuredImage?.node?.sourceUrl ?? '',
  }}
  showHeader={false}
  primaryMenu={nodeByUri?.primaryMenu?.nodes?.[0] && isGraphType(nodeByUri?.primaryMenu?.nodes?.[0], 'Menu') ? nodeByUri?.primaryMenu?.nodes?.[0] : null}
  footerMenu={nodeByUri?.footerMenu?.nodes?.[0] && isGraphType(nodeByUri?.footerMenu?.nodes?.[0], 'Menu') ? nodeByUri?.footerMenu?.nodes?.[0] : null}
  seo={seo}
>
    {title && (
        <header class="mb-8">
            <h1 class="text-3xl leading-tight font-serif font-medium sm:text-5xl sm:leading-tight">{title}</h1>
        </header>
    )}
    <WPBlock blocks={blocks} />
    {posts?.map(edge => {
        return (
          <PostPreview post={edge.node} cursor={edge?.cursor || ''} class="mb-10 sm:mb-12" />
        )
    })}
</BaseLayout>
