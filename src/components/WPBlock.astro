---
import { Image } from "astro:assets"
import { isGraphType } from "@/utils/types"
import type { WPBlock } from "@/utils/types"
import List from "@/components/List.astro"
import Heading from "@/components/Heading.astro"
import Button from '@/components/Button.astro';
import { unescapeHTML, transformImageData } from '@/lib/utils';
import hljs from 'highlight.js/lib/core';
import javascript from 'highlight.js/lib/languages/javascript';
import bash from 'highlight.js/lib/languages/bash';
import csharp from 'highlight.js/lib/languages/csharp';
import django from 'highlight.js/lib/languages/django';
import python from 'highlight.js/lib/languages/python';
import css from 'highlight.js/lib/languages/css';
import dockerfile from 'highlight.js/lib/languages/dockerfile';
import go from 'highlight.js/lib/languages/go';
import graphql from 'highlight.js/lib/languages/graphql';
import rust from 'highlight.js/lib/languages/rust';
import vim from 'highlight.js/lib/languages/vim';
import yaml from 'highlight.js/lib/languages/yaml';
import sql from 'highlight.js/lib/languages/sql';
import php from 'highlight.js/lib/languages/php';
import markdown from 'highlight.js/lib/languages/markdown';
import mathematica from 'highlight.js/lib/languages/mathematica';
hljs.registerLanguage('javascript', javascript);
hljs.registerLanguage('bash', bash);
hljs.registerLanguage('csharp', csharp);
hljs.registerLanguage('django', django);
hljs.registerLanguage('python', python);
hljs.registerLanguage('css', css);
hljs.registerLanguage('dockerfile', dockerfile);
hljs.registerLanguage('go', go);
hljs.registerLanguage('graphql', graphql);
hljs.registerLanguage('rust', rust);
hljs.registerLanguage('vim', vim);
hljs.registerLanguage('yaml', yaml);
hljs.registerLanguage('sql', sql);
hljs.registerLanguage('markdown', markdown);
hljs.registerLanguage('mathematica', mathematica);
import 'highlight.js/styles/github-dark.css';


export type Props = {
  blocks: WPBlock[]
}

const { blocks } = Astro.props as Props
---
<!-- image -->
{blocks.map(block => {
  if (isGraphType(block, 'CoreImage')) {
    const transformedImage = transformImageData(block);
    return (
    <div class="max-w-none prose prose-dante sm:prose-lg my-4">
      <figure key={block.clientId}>
        <Image
          src={transformedImage?.src}
          srcset={transformedImage?.srcset}
          loading="lazy"
          decoding="async"
          height={transformedImage?.height}
          width={transformedImage?.width}
          alt={block.attributes?.alt}
        />
        {block.attributes.caption && <figcaption class="mt-1.5 text-xs sm:text-sm">{block.attributes.caption}</figcaption>}
      </figure>
      </div>
    )
  }
  if (isGraphType(block, 'CoreParagraph')) {
    return (<div class="max-w-none prose prose-dante sm:prose-lg my-4">
    <p set:html={block.attributes.content}></p>
    </div>)
  }
  if (isGraphType(block, 'CoreList')) {
    return (
    <div class="max-w-none prose prose-dante sm:prose-lg my-4">
    <List key={block.clientId} block={block} />
    </div>
    )
  }
  if (isGraphType(block, 'CoreHeading')) {
    return (
    <div class="max-w-none prose prose-dante sm:prose-lg my-4">
      <Heading  key={block.clientId} block={block} />
    </div>)
  }
  if (isGraphType(block, 'CoreButtons')) {
    return (
      <div class="max-w-none prose prose-dante sm:prose-lg my-4">
        <Button key={block.clientId} block={block} />
      </div>
    )
  }
  if (isGraphType(block, "CoreCode")) {
    return  (
      <pre class="pre p-y-0">
        <code class="hljs"
        set:html={
          unescapeHTML(hljs.highlightAuto(block.attributes?.content).value)
        } />
      </pre>
    )
  }
  if (block) {
    console.log('Block not supported:', block)
  }
})}
